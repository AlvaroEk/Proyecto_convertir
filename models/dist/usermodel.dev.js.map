{"version":3,"sources":["usermodel.js"],"names":["require","obtenerConexion","registrar","nombre","email","password","conexion","query","console","log","error","release","obtenerPorNombre","results","obtenerPorId","id","module","exports"],"mappings":";;;;;;;;;;eAA4BA,OAAO,CAAC,uBAAD,C;IAA3BC,e,YAAAA,e;;AAER,SAAeC,SAAf,CAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC2BJ,eAAe,EAD1C;;AAAA;AACUK,UAAAA,QADV;AAAA;AAAA;AAAA,0CAGcA,QAAQ,CAACC,KAAT,CAAe,mEAAf,EAAoF,CAACJ,MAAD,EAASC,KAAT,EAAgBC,QAAhB,CAApF,CAHd;;AAAA;AAIQG,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAJR;AAAA;;AAAA;AAAA;AAAA;AAMQD,UAAAA,OAAO,CAACE,KAAR,CAAc,4BAAd;AANR;;AAAA;AAAA;AASQ;AACAJ,UAAAA,QAAQ,CAACK,OAAT;AAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAeC,gBAAf,CAAgCT,MAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC2BF,eAAe,EAD1C;;AAAA;AACUK,UAAAA,QADV;AAAA;AAAA;AAAA,0CAGgCA,QAAQ,CAACC,KAAT,CAAe,yCAAf,EAA0D,CAACJ,MAAD,CAA1D,CAHhC;;AAAA;AAAA;AAAA;AAGeU,UAAAA,OAHf;AAAA,4CAIeA,OAAO,CAAC,CAAD,CAJtB;;AAAA;AAAA;AAAA;AAMQL,UAAAA,OAAO,CAACE,KAAR,CAAc,sCAAd;AANR;;AAAA;AAAA;AASQ;AACAJ,UAAAA,QAAQ,CAACK,OAAT;AAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAeG,YAAf,CAA4BC,EAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC2Bd,eAAe,EAD1C;;AAAA;AACUK,UAAAA,QADV;AAAA;AAAA;AAAA,0CAGgCA,QAAQ,CAACC,KAAT,CAAe,qCAAf,EAAsD,CAACQ,EAAD,CAAtD,CAHhC;;AAAA;AAAA;AAAA;AAGeF,UAAAA,OAHf;AAAA,4CAIeA,OAAO,CAAC,CAAD,CAJtB;;AAAA;AAAA;AAAA;AAMQL,UAAAA,OAAO,CAACE,KAAR,CAAc,kCAAd;AANR;;AAAA;AAAA;AASQ;AACAJ,UAAAA,QAAQ,CAACK,OAAT;AAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAK,MAAM,CAACC,OAAP,GAAiB;AACbf,EAAAA,SAAS,EAATA,SADa;AAEbU,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbE,EAAAA,YAAY,EAAZA;AAHa,CAAjB","sourcesContent":["const { obtenerConexion } = require('../date_base/conexion');\r\n\r\nasync function registrar(nombre, email, password) {\r\n    const conexion = await obtenerConexion();\r\n    try {\r\n        await conexion.query('INSERT INTO usuarios (nombre, email, contrase침a) VALUES (?, ?, ?)', [nombre, email, password]);\r\n        console.log('Usuario insertado correctamente');\r\n    } catch (error) {\r\n        console.error('Error al insertar usuario:', error);\r\n        throw error;\r\n    } finally {\r\n        // Liberar la conexi칩n\r\n        conexion.release();\r\n    }\r\n}\r\n\r\nasync function obtenerPorNombre(nombre) {\r\n    const conexion = await obtenerConexion();\r\n    try {\r\n        const [results] = await conexion.query('SELECT * FROM usuarios WHERE nombre = ?', [nombre]);\r\n        return results[0];\r\n    } catch (error) {\r\n        console.error('Error al obtener usuario por nombre:', error);\r\n        throw error;\r\n    } finally {\r\n        // Liberar la conexi칩n\r\n        conexion.release();\r\n    }\r\n}\r\n\r\nasync function obtenerPorId(id) {\r\n    const conexion = await obtenerConexion();\r\n    try {\r\n        const [results] = await conexion.query('SELECT * FROM usuarios WHERE id = ?', [id]);\r\n        return results[0];\r\n    } catch (error) {\r\n        console.error('Error al obtener usuario por ID:', error);\r\n        throw error;\r\n    } finally {\r\n        // Liberar la conexi칩n\r\n        conexion.release();\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    registrar,\r\n    obtenerPorNombre,\r\n    obtenerPorId,\r\n};\r\n"],"file":"usermodel.dev.js"}