{"version":3,"sources":["registro-usuario.js"],"names":["express","require","router","Router","db","post","req","res","body","nombre","email","password","confirmPassword","status","send","obtenerUsuarioPorNombre","err","usuarioExistente","registrarUsuario","then","redirect","module","exports"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,EAAE,GAAGH,OAAO,CAAC,OAAD,CAAlB,C,CAEA;;;AACAC,MAAM,CAACG,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC0BD,GAAG,CAACE,IAD9B;AAAA,MACnBC,MADmB,aACnBA,MADmB;AAAA,MACXC,KADW,aACXA,KADW;AAAA,MACJC,QADI,aACJA,QADI;AAAA,MACMC,eADN,aACMA,eADN,EAG3B;;AACA,MAAID,QAAQ,KAAKC,eAAjB,EAAkC;AAC9B,WAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAArB,CAAP;AACH,GAN0B,CAQ3B;;;AACAV,EAAAA,EAAE,CAACW,uBAAH,CAA2BN,MAA3B,EAAmC,UAACO,GAAD,EAAMC,gBAAN,EAA2B;AAC1D,QAAID,GAAJ,EAAS;AACL,aAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB,CAAP;AACH;;AACD,QAAIG,gBAAJ,EAAsB;AAClB,aAAOV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,+BAArB,CAAP;AACH;;AAEDV,IAAAA,EAAE,CAACc,gBAAH,CAAoBT,MAApB,EAA4BC,KAA5B,EAAmCC,QAAnC,EACCQ,IADD,CACM,YAAM;AACR;AACAZ,MAAAA,GAAG,CAACa,QAAJ,CAAa,QAAb;AACH,KAJD,WAKO,UAACJ,GAAD,EAAS;AACZ;AACA,aAAOT,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB,CAAP;AACH,KARD;AAUH,GAlBD;AAmBH,CA5BD;AA8BAO,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["// routes/registrar-usuario.js\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../db');\r\n\r\n// Ruta para manejar el registro de usuarios\r\nrouter.post('/', (req, res) => {\r\n    const { nombre, email, password, confirmPassword } = req.body;\r\n\r\n    // Verificar si la contraseña y su confirmación coinciden\r\n    if (password !== confirmPassword) {\r\n        return res.status(400).send('Las contraseñas no coinciden');\r\n    }\r\n\r\n    // Verificar si el usuario ya está registrado\r\n    db.obtenerUsuarioPorNombre(nombre, (err, usuarioExistente) => {\r\n        if (err) {\r\n            return res.status(500).send('Error interno del servidor');\r\n        }\r\n        if (usuarioExistente) {\r\n            return res.status(400).send('El usuario ya está registrado');\r\n        }\r\n\r\n        db.registrarUsuario(nombre, email, password)\r\n        .then(() => {\r\n            // Usuario insertado correctamente\r\n            res.redirect('/login');\r\n        })\r\n        .catch((err) => {\r\n            // Error al insertar usuario\r\n            return res.status(500).send('Error interno del servidor');\r\n        });\r\n\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"registro-usuario.dev.js"}