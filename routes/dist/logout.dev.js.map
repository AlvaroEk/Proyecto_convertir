{"version":3,"sources":["logout.js"],"names":["express","require","router","Router","get","req","res","logout","err","console","error","session","destroy","status","send","log","sessionStore","clear","carritoCache","clearCookie","redirect","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEND,GAAG,CAACE,MAAJ,CAAW,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACf,wBAAIA,GAAJ,EAAS;AACP;AACAC,sBAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;;AAJc;AAAA,oDAKTH,GAAG,CAACM,OAAJ,CAAYC,OAAZ,CAAoB,UAACJ,GAAD,EAAS;AAAI;AACrC,0BAAIA,GAAJ,EAAS;AACPC,wBAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACA,+BAAOF,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB,CAAP;AACD;;AACDL,sBAAAA,OAAO,CAACM,GAAR,CAAY,8CAAZ;AACD,qBANK,CALS;;AAAA;AAAA;AAAA,oDAaTV,GAAG,CAACW,YAAJ,CAAiBC,KAAjB,CAAuB,UAACT,GAAD,EAAS;AACpC,0BAAIA,GAAJ,EAAS;AACPC,wBAAAA,OAAO,CAACC,KAAR,CAAc,0CAAd,EAA0DF,GAA1D;AACA,+BAAOF,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB,CAAP;AACD;;AACDL,sBAAAA,OAAO,CAACM,GAAR,CAAY,iDAAZ;AACD,qBANK,CAbS;;AAAA;AAoBfG,oBAAAA,YAAY,GAAG,EAAf;AACAZ,oBAAAA,GAAG,CAACa,WAAJ,CAAgB,OAAhB;AACAb,oBAAAA,GAAG,CAACc,QAAJ,CAAa,GAAb,EAtBe,CAsBI;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAX,CAFM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BZX,UAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd;AACAJ,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAArB;;AA5BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAgCAO,MAAM,CAACC,OAAP,GAAiBpB,MAAjB","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\n\r\nrouter.get('/', async (req, res) => {\r\n  try {\r\n    await req.logout(async (err) => {\r\n      if (err) {\r\n        // Manejo del error\r\n        console.error(err);\r\n      }\r\n      await req.session.destroy((err) => {   // Eliminar la sesión completa\r\n        if (err) {\r\n          console.error('Error al destruir la sesión:', err);\r\n          return res.status(500).send('Error al cerrar sesión');\r\n        }\r\n        console.log('req.session.destroy finalizado correctamente');\r\n      });\r\n      // Eliminar el contenido del almacén de sesiones\r\n      await req.sessionStore.clear((err) => {\r\n        if (err) {\r\n          console.error('Error al limpiar el almacén de sesiones:', err);\r\n          return res.status(500).send('Error al cerrar sesión');\r\n        }\r\n        console.log('req.sessionStore.clear finalizado correctamente');\r\n      });\r\n      carritoCache = {};\r\n      res.clearCookie('token');\r\n      res.redirect('/'); // Redirigir a la página principal\r\n    });\r\n  } catch (error) {\r\n    console.error('Error al cerrar sesión:', error);\r\n    res.status(500).send('Error al cerrar sesión');\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"logout.dev.js"}