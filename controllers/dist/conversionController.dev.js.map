{"version":3,"sources":["conversionController.js"],"names":["sharp","require","exports","convertirImagen","req","res","file","mimetype","startsWith","status","send","formatoDestino","body","opciones","buffer","toFormat","toBuffer","imagenConvertida","set","console","error"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,OAAO,CAACC,eAAR,GAA0B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAGlB,CAACD,GAAG,CAACE,IAAL,IAAa,CAACF,GAAG,CAACE,IAAJ,CAASC,QAAT,CAAkBC,UAAlB,CAA6B,YAA7B,CAHI;AAAA;AAAA;AAAA;;AAAA,2CAIbH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gDAArB,CAJa;;AAAA;AAOtB;AACIC,UAAAA,cARkB,GAQD,KARC,EAQM;;AAC5B,cAAIP,GAAG,CAACQ,IAAJ,CAASC,QAAT,KAAsB,MAA1B,EAAkC;AAChCF,YAAAA,cAAc,GAAG,MAAjB;AACD,WAXqB,CAatB;;;AAbsB;AAAA,0CAcSX,KAAK,CAACI,GAAG,CAACE,IAAJ,CAASQ,MAAV,CAAL,CAAuBC,QAAvB,CAAgCJ,cAAhC,EAAgDK,QAAhD,EAdT;;AAAA;AAchBC,UAAAA,gBAdgB;AAgBtB;AACAZ,UAAAA,GAAG,CAACa,GAAJ,CAAQ;AACN,4CAAyBP,cAAzB,CADM;AACqC;AAC3C,sFAAkEA,cAAlE,OAFM,CAE+E;;AAF/E,WAAR,EAjBsB,CAsBtB;;AACAN,UAAAA,GAAG,CAACK,IAAJ,CAASO,gBAAT;AAvBsB;AAAA;;AAAA;AAAA;AAAA;AAyBtBE,UAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd;AACAf,UAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB;;AA1BsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["const sharp = require('sharp');\r\n\r\nexports.convertirImagen = async (req, res) => {\r\n  try {\r\n    // Verificar si se ha proporcionado un archivo y si es una imagen\r\n    if (!req.file || !req.file.mimetype.startsWith('image/jpeg')) {\r\n      return res.status(400).send('El archivo cargado no es una imagen JPG v√°lida');\r\n    }\r\n\r\n    // Determinar el formato al que se debe convertir\r\n    let formatoDestino = 'png'; // Predeterminado a PNG\r\n    if (req.body.opciones === 'JPEG') {\r\n      formatoDestino = 'jpeg';\r\n    }\r\n\r\n    // Convertir la imagen de JPG al formato seleccionado\r\n    const imagenConvertida = await sharp(req.file.buffer).toFormat(formatoDestino).toBuffer();\r\n\r\n    // Configurar el encabezado Content-Disposition para que el navegador descargue la imagen\r\n    res.set({\r\n      'Content-Type': `image/${formatoDestino}`, // Tipo de contenido de salida: PNG o JPEG\r\n      'Content-Disposition': `attachment; filename=\"imagen_convertida.${formatoDestino}\"`, // Nombre del archivo a descargar\r\n    });\r\n\r\n    // Enviar la imagen convertida al cliente\r\n    res.send(imagenConvertida);\r\n  } catch (error) {\r\n    console.error('Error al convertir la imagen:', error);\r\n    res.status(500).send('Error interno del servidor');\r\n  }\r\n};\r\n"],"file":"conversionController.dev.js"}