{"version":3,"sources":["server.js"],"names":["express","require","app","path","multer","router","conversionController","session","flash","passport","LocalStrategy","Strategy","SQLiteStore","db","dotenv","cookieParser","use","config","secret","process","env","ACCESS_TOKEN_SECRET","resave","saveUninitialized","store","table","initialize","username","password","done","obtenerUsuarioPorNombre","err","user","message","serializeUser","id","deserializeUser","getUserById","req","res","next","locals","carrito","console","log","method","url","error","stack","status","send","urlencoded","extended","set","join","__dirname","json","storage","memoryStorage","upload","single","post","convertirImagen","port","listen"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst app = express();\r\nconst path = require('path');\r\nconst multer = require('multer');\r\nconst router = require('./routes/routes');// Importa el enrutador\r\nconst conversionController = require('./controllers/conversionController');// Importar el controlador de conversión\r\nconst session = require('express-session');\r\nconst flash = require('connect-flash');\r\nconst passport = require('passport');\r\nconst LocalStrategy = require('passport-local').Strategy;\r\nconst SQLiteStore = require('connect-sqlite3')(session);\r\nconst db = require('./db')\r\nconst dotenv = require('dotenv');\r\nconst cookieParser = require('cookie-parser');\r\n\r\n//Configura Cookie Parser\r\napp.use(cookieParser());\r\n\r\ndotenv.config();\r\n\r\n// Configurar middleware para manejar sesiones\r\napp.use(session({\r\n  secret: process.env.ACCESS_TOKEN_SECRET, // Clave secreta para firmar la cookie de sesión\r\n  resave: false,\r\n  saveUninitialized: false,\r\n  store: new SQLiteStore({ db: 'sessionsDB.sqlite', table: 'sessions' }) // Almacena las sesiones en una base de datos SQLite\r\n}));\r\n\r\n// Configura connect-flash\r\napp.use(flash());\r\n\r\n// Configurar Passport.js\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n// Configurar estrategia de autenticación local\r\npassport.use(new LocalStrategy(\r\n  (username, password, done) => {\r\n    db.obtenerUsuarioPorNombre(username, (err, user) => {\r\n      if (err) { return done(err); }\r\n      if (!user) { return done(null, false, { message: 'Usuario incorrecto.' }); }\r\n      if (user.password !== password) { return done(null, false, { message: 'Contraseña incorrecta.' }); }\r\n      return done(null, user);\r\n    });\r\n  }\r\n));\r\n\r\npassport.serializeUser((user, done) => {\r\n  done(null, user.id);\r\n});\r\n\r\npassport.deserializeUser((id, done) => {\r\n  db.getUserById(id, (err, user) => {\r\n    done(err, user);\r\n  });\r\n});\r\n\r\napp.use((req, res, next) => {\r\n  res.locals.carrito = req.session.carrito || [];\r\n  console.log(`Solicitud recibida: ${req.method} ${req.url}`);\r\n  next();\r\n});\r\n\r\napp.use((err, req, res, next) => {\r\n  console.error(err.stack);\r\n  res.status(500).send('Algo salió mal');\r\n});\r\n\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// Configura el motor de vistas\r\napp.set('view engine', 'pug');\r\napp.set('views', path.join(__dirname, 'views'));\r\n\r\n// Middleware para procesar archivos estáticos en la carpeta 'public'\r\napp.use(express.static('public'));\r\napp.use(express.json());\r\napp.use('/', router);\r\n\r\n// Ruta para los estilos\r\napp.use(express.static('public'));\r\n\r\n// Configurar Multer para manejar la carga de archivos en memoria\r\nconst storage = multer.memoryStorage();\r\nconst upload = multer({ storage });\r\n\r\n// Middleware para procesar datos de formulario con archivos\r\napp.use(upload.single('seleccionarImg'));\r\n\r\n// Ruta para manejar la solicitud POST del formulario de carga\r\napp.post('/convertir', conversionController.convertirImagen);\r\n\r\n// Puerto del servidor\r\nconst port = 3000;\r\napp.listen(port, () => {\r\n  console.log(`Servidor iniciado en http://localhost:${port}`);\r\n});\r\n"],"file":"server.dev.js"}