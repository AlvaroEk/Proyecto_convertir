"use strict";var sqlite3=require("sqlite3").verbose(),db=new sqlite3.Database("database.sqlite");function obtenerPorId(e){return regeneratorRuntime.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",new Promise(function(o,n){db.query("SELECT * FROM productos WHERE id = ?",[e],function(r,e){r?(console.error("Error al obtener el producto por ID:",r),n(r)):(console.log("Producto obtenido correctamente:",e),o(e))})}));case 1:case"end":return r.stop()}})}function registrarUsuario(r,s,t){return new Promise(function(e,o){var n=db.prepare("INSERT INTO usuarios (nombre, email, password) VALUES (?, ?, ?)");n.run(r,s,t,function(r){r?(console.error(r.message),o(r)):(console.log("Usuario insertado correctamente"),e()),n.finalize()})})}function obtenerUsuarioPorNombre(r,o){db.get("SELECT * FROM usuarios WHERE nombre = ?",[r],function(r,e){r?(console.error(r.message),o(r,null)):o(null,e)})}function getUserById(r,o){db.get("SELECT * FROM usuarios WHERE id = ?",[r],function(r,e){r?(console.error(r.message),o(r,null)):o(null,e)})}db.serialize(function(){db.run("CREATE TABLE IF NOT EXISTS usuarios (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nombre TEXT,\n    email TEXT UNIQUE,\n    password TEXT\n  )")}),module.exports={registrarUsuario:registrarUsuario,obtenerUsuarioPorNombre:obtenerUsuarioPorNombre,getUserById:getUserById};
//# sourceMappingURL=db.min.js.map
